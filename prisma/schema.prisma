// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Category {
  id    Int     @id @default(autoincrement())
  title String
  image String?
  categoryusers CategoryUser[] //referencia da CategoryUser

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  classes Classroom[]

  @@map("categories")//map permitee que mudemos o nome da tabela depois
}//tabela de categoria

model Classroom {
  id            Int    @id @default(autoincrement())
  title         String
  numberClasses Int
  time          Float
  video         String
  description   String
  category      Category   @relation(fields: [categoryId], references: [id])
  categoryId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("classes") 
} //tabela de aula

model User {
  id Int @id @default(autoincrement())
  idDevide String
  categoryusers CategoryUser[] //referencia da CategoryUser

  createdAt DateTime @default(now()) 
  updatedAt DateTime @updatedAt //nao tenhho certeza se precisa desse pq n acho que vai ter altera√ßao depois de criado

  @@map("users")
}

model CategoryUser {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int //vai pegar referencia da tabela User 
  category Category @relation(fields: [categoryId], references: [id])
  categoryId Int //vai pegar referencia da tabela Category

  createdAt DateTime @default(now()) 
  updatedAt DateTime @updatedAt

  @@map("categoryusers")
} // tabela de categoria favorita do usuario

model ClassroomUser {
  id Int @id @default(autoincrement())
  userId Int //vai pegar referencia da tabela User
  classrooomId Int  //vai pegar referencia da tabela Classroom // rascunho era categoryId

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  @@map("classesUsers")
} //tabela de aulas favoritas do usuario